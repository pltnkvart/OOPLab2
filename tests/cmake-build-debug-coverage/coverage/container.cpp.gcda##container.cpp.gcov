        -:    0:Source:/Users/plotnikovartem/CLionProjects/OOP/Lab2/container/container.cpp
        -:    0:Graph:/Users/plotnikovartem/CLionProjects/OOP/Lab2/tests/cmake-build-debug-coverage/CMakeFiles/Tests.dir/Users/plotnikovartem/CLionProjects/OOP/Lab2/container/container.cpp.gcno
        -:    0:Data:/Users/plotnikovartem/CLionProjects/OOP/Lab2/tests/cmake-build-debug-coverage/CMakeFiles/Tests.dir/Users/plotnikovartem/CLionProjects/OOP/Lab2/container/container.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "container.h"
        -:    2:#include "../input/inputFunc.h"
        -:    3:
        -:    4:/**
        -:    5: * @brief Empty constructor
        -:    6: */
function _ZN9ContainerC2Ev called 21 returned 100% blocks executed 100%
function _ZN9ContainerC1Ev called 21 returned 100% blocks executed 100%
       42:    7:Container::Container() : mass(0), volume(0), category(EMPTY) {};
       21:    7-block  0
       21:    7-block  1
        -:    8:
        -:    9:/**
        -:   10: * @brief Constructor with initialization of name, mass, volume and category
        -:   11: * @param p_name Name
        -:   12: * @param p_volume Volume
        -:   13: * @param p_mass Mass
        -:   14: * @param p_category Category
        -:   15: */
function _ZN9ContainerC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEdd13CargoCategory called 16 returned 100% blocks executed 100%
function _ZN9ContainerC1ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEdd13CargoCategory called 16 returned 100% blocks executed 100%
       32:   16:Container::Container(const std::string p_name,
        -:   17:                     const double p_volume,
        -:   18:                     const double p_mass,
        -:   19:                     const CargoCategory p_category) :
       16:   20:        name(p_name),
       16:   21:        mass(p_mass),
       16:   22:        volume(p_volume),
       48:   23:        category(p_category) {}
       16:   23-block  0
       16:   23-block  1
       16:   23-block  2
        -:   24:
        -:   25:/**
        -:   26: * @brief Constructor with initialization of mass and volume
        -:   27: * @param p_mass Mass
        -:   28: * @param p_volume Volume
        -:   29: */
function _ZN9ContainerC2Edd called 3 returned 100% blocks executed 100%
function _ZN9ContainerC1Edd called 3 returned 100% blocks executed 100%
        9:   30:Container::Container(double p_mass, double p_volume) : name("Undefined"),
        3:   31:                                                       mass(p_mass),
        3:   32:                                                       volume(p_volume),
        9:   33:                                                       category(DANGEROUS) {}
        3:   33-block  0
        3:   33-block  1
        3:   33-block  2
        -:   34:
        -:   35:/**
        -:   36: * @brief Overload output function
        -:   37: * @param is Stream from which data is entered
        -:   38: * @param container Readable structure
        -:   39: * @return Stream
        -:   40: */
function _ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK9Container called 1 returned 100% blocks executed 60%
        1:   41:std::ostream &operator<<(std::ostream &is, const Container &container) {
        2:   42:    is << container.name << " Mass - " << container.mass << " Volume - " << container.volume
    $$$$$:   42-block  0
    $$$$$:   42-block  1
        1:   43:       << " Category - " << convertToenum(container.category) << std::endl;
        1:   43-block  0
branch  0 taken 1
branch  1 taken 0
        1:   43-block  1
branch  2 taken 1
branch  3 taken 0
        1:   44:    return is;
        1:   44-block  0
    #####:   45:}
        -:   46:
        -:   47:
        -:   48:/**
        -:   49: * @brief Setting name
        -:   50: */
function _ZN9Container7setNameENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE called 2 returned 100% blocks executed 100%
        2:   51:Container &Container::setName(std::string p_name) {
        2:   52:    name = p_name;
        2:   53:    return *this;
        2:   53-block  0
        -:   54:}
        -:   55:
        -:   56:/**
        -:   57: * @brief Setting mass
        -:   58: */
function _ZN9Container7setMassEd called 2 returned 100% blocks executed 100%
        2:   59:Container &Container::setMass(double p_mass) {
        2:   60:    mass = p_mass;
        2:   61:    return *this;
        2:   61-block  0
        -:   62:}
        -:   63:
        -:   64:/**
        -:   65: * @brief Setting volume
        -:   66: */
function _ZN9Container9setVolumeEd called 2 returned 100% blocks executed 100%
        2:   67:Container &Container::setVolume(double p_volume) {
        2:   68:    volume = p_volume;
        2:   69:    return *this;
        2:   69-block  0
        -:   70:}
        -:   71:
        -:   72:/**
        -:   73: * @brief Setting cargo category
        -:   74: */
function _ZN9Container11setCategoryE13CargoCategory called 2 returned 100% blocks executed 100%
        2:   75:Container &Container::setCategory(CargoCategory p_category) {
        2:   76:    category = p_category;
        2:   77:    return *this;
        2:   77-block  0
        -:   78:}
        -:   79:
        -:   80:/**
        -:   81: * @brief Overload input function
        -:   82: * @param is Stream into which data is entered
        -:   83: * @param container Writable structure
        -:   84: * @return Stream
        -:   85: */
function _ZrsRNSt3__113basic_istreamIcNS_11char_traitsIcEEEER9Container called 1 returned 100% blocks executed 62%
        1:   86:std::istream& operator>>(std::istream& is, Container& container) {
        1:   87:    std::string name;
        -:   88:    double mass, volume;
        -:   89:    int category;
        -:   90:
        1:   91:    is >> name >> mass >> volume >> category;
        1:   91-block  0
branch  0 taken 1
branch  1 taken 0
        1:   91-block  1
branch  2 taken 1
branch  3 taken 0
        1:   91-block  2
branch  4 taken 1
branch  5 taken 0
        1:   91-block  3
branch  6 taken 1
branch  7 taken 0
        1:   92:    if(is.fail()){
        1:   92-block  0
branch  0 taken 1
branch  1 taken 0
        1:   92-block  1
branch  2 taken 0
branch  3 taken 1
    #####:   93:        is.setstate(std::ios::failbit);
    $$$$$:   93-block  0
branch  0 never executed
branch  1 never executed
    #####:   94:        return is;
    $$$$$:   94-block  0
        -:   95:    }
        1:   96:    container.setName(name);
        1:   96-block  0
branch  0 taken 1
branch  1 taken 0
        1:   96-block  1
branch  2 taken 0
branch  3 taken 1
    $$$$$:   96-block  2
        1:   97:    container.setMass(mass);
        1:   98:    container.setVolume(volume);
        1:   99:    container.setCategory(CargoCategory(category));
        1:  100:    return is;
        1:  100-block  0
        1:  101:}
    $$$$$:  101-block  0
        1:  101-block  1
    $$$$$:  101-block  2
    $$$$$:  101-block  3
        -:  102:
        -:  103:/**
        -:  104: * @brief Overloading a given mass of cargo from one container to another
        -:  105: * @param massToTransfer Mass of cargo to overload
        -:  106: * @param otherContainer Another container to overload
        -:  107: */
function _ZN9Container13transferCargoEdRS_ called 6 returned 100% blocks executed 76%
        6:  108:void Container::transferCargo(double massToTransfer, Container &otherContainer) {
        6:  109:    if (category == DANGEROUS || otherContainer.category == DANGEROUS) {
        6:  109-block  0
branch  0 taken 5
branch  1 taken 1
        5:  109-block  1
    $$$$$:  109-block  2
        5:  109-block  3
        1:  110:        throw std::runtime_error("Dangerous goods must not be combined!");
        1:  110-block  0
branch  0 taken 1
branch  1 taken 0
        1:  110-block  1
    $$$$$:  110-block  2
    $$$$$:  110-block  3
        -:  111:    }
        5:  112:    if (category != EMPTY && otherContainer.category != EMPTY && category != otherContainer.category) {
        5:  112-block  0
branch  0 taken 5
branch  1 taken 0
        5:  112-block  1
branch  2 taken 1
branch  3 taken 4
        4:  112-block  2
        4:  112-block  3
branch  4 taken 3
branch  5 taken 1
        1:  112-block  4
        1:  113:        throw std::runtime_error("Different categories!");
        1:  113-block  0
branch  0 taken 1
branch  1 taken 0
        1:  113-block  1
    $$$$$:  113-block  2
        -:  114:    }
        4:  115:    if (name != otherContainer.name && (category == BULK || category == LIQUID || category == GAS)) {
        4:  115-block  0
branch  0 taken 0
branch  1 taken 4
        4:  115-block  1
branch  2 taken 3
branch  3 taken 1
        3:  115-block  2
    $$$$$:  115-block  3
        3:  115-block  4
        3:  115-block  5
    $$$$$:  115-block  6
        3:  115-block  7
        1:  116:        throw std::runtime_error("Can't combine bulk cargo, liquids and gases of different types!");
        1:  116-block  0
branch  0 taken 1
branch  1 taken 0
        1:  116-block  1
    $$$$$:  116-block  2
        -:  117:    }
        3:  118:    if (otherContainer.category == EMPTY) {
        3:  118-block  0
branch  0 taken 2
branch  1 taken 1
        1:  119:        otherContainer.name = name;
        1:  120:        otherContainer.category = category;
        1:  121:        category = EMPTY;
        1:  122:        name = "";
        1:  123:    }
        1:  123-block  0
        3:  124:    mass -= massToTransfer;
        3:  125:    otherContainer.mass += massToTransfer;
        3:  126:    volume -= getDensity() / mass;
        3:  127:    otherContainer.volume += getDensity() / mass;
        3:  128:}
        3:  128-block  0
        -:  129:
        -:  130:/**
        -:  131: * @brief Overload all the cargo from one container to another
        -:  132: * @param otherContainer Another container to overload
        -:  133: */
function _ZN9ContainerrsERS_ called 1 returned 100% blocks executed 100%
        1:  134:void Container::operator>>(Container &otherContainer) {
        1:  135:    transferCargo(mass, otherContainer);
        1:  136:}
        1:  136-block  0
        -:  137:
        -:  138:/**
        -:  139: * @brief Getting the density of container
        -:  140: * @return Density
        -:  141: */
function _ZN9Container10getDensityEv called 8 returned 100% blocks executed 75%
        8:  142:const double Container::getDensity() {
        8:  143:    if (volume == 0) return 0;
        8:  143-block  0
branch  0 taken 0
branch  1 taken 8
    $$$$$:  143-block  1
        8:  144:    return mass / volume;
        8:  144-block  0
        8:  145:}
        8:  145-block  0
        -:  146:
        -:  147:/**
        -:  148: * @brief Adding the mass of cargo to the container
        -:  149: * @param addedMass Mass of cargo to be added
        -:  150: */
function _ZN9Container8addCargoEd called 1 returned 100% blocks executed 100%
        1:  151:void Container::addCargo(double addedMass) {
        1:  152:    double addedVolume = addedMass / getDensity();
        1:  153:    volume += addedVolume;
        1:  154:    mass += addedMass;
        1:  155:}
        1:  155-block  0
